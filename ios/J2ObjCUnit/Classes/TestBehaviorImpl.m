//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/TestBehaviorImpl.java
//

#include "J2ObjC_source.h"
#include "TestBehaviorImpl.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"

@interface J2ObjCUnitTestBehaviorImpl () {
 @public
  id<JavaUtilList> message_;
  id context_;
}

@end

J2OBJC_FIELD_SETTER(J2ObjCUnitTestBehaviorImpl, message_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(J2ObjCUnitTestBehaviorImpl, context_, id)

@implementation J2ObjCUnitTestBehaviorImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  J2ObjCUnitTestBehaviorImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
}

- (void)setUpClass {
}

- (void)tearDown {
}

- (void)tearDownClass {
}

- (void)sayWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(self->message_)) addWithId:message];
}

- (void)clearMessages {
  [((id<JavaUtilList>) nil_chk(self->message_)) clear];
}

- (id<JavaUtilList>)getMessage {
  return message_;
}

- (void)setContextWithId:(id)context {
  self->context_ = context;
}

- (id)getContext {
  return context_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(setUpClass);
  methods[3].selector = @selector(tearDown);
  methods[4].selector = @selector(tearDownClass);
  methods[5].selector = @selector(sayWithNSString:);
  methods[6].selector = @selector(clearMessages);
  methods[7].selector = @selector(getMessage);
  methods[8].selector = @selector(setContextWithId:);
  methods[9].selector = @selector(getContext);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "message_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
    { "context_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "say", "LNSString;", "()Ljava/util/List<Ljava/lang/String;>;", "setContext", "LNSObject;", "Ljava/util/List<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _J2ObjCUnitTestBehaviorImpl = { "TestBehaviorImpl", "br.com.mobilemind.j2objc.unit", ptrTable, methods, fields, 7, 0x401, 10, 2, -1, -1, -1, -1, -1 };
  return &_J2ObjCUnitTestBehaviorImpl;
}

@end

void J2ObjCUnitTestBehaviorImpl_init(J2ObjCUnitTestBehaviorImpl *self) {
  NSObject_init(self);
  self->message_ = new_JavaUtilLinkedList_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(J2ObjCUnitTestBehaviorImpl)
