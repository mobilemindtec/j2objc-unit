//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/TestRunner.java
//

#ifndef TestRunner_H
#define TestRunner_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSClass;
@class JavaUtilLoggingLogger;
@protocol J2ObjCUnitOutputDir;

@interface J2ObjCUnitTestRunner : NSObject
@property (readonly, class) JavaUtilLoggingLogger *logger NS_SWIFT_NAME(logger);

+ (JavaUtilLoggingLogger *)logger;

#pragma mark Public

+ (void)cleanResults;

+ (NSString *)printTestsResultWithJ2ObjCUnitOutputDir:(id<J2ObjCUnitOutputDir>)outArg;

+ (void)runWithIOSClass:(IOSClass *)clazz
                 withId:(id)context;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(J2ObjCUnitTestRunner)

inline JavaUtilLoggingLogger *J2ObjCUnitTestRunner_get_logger(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilLoggingLogger *J2ObjCUnitTestRunner_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(J2ObjCUnitTestRunner, logger, JavaUtilLoggingLogger *)

FOUNDATION_EXPORT void J2ObjCUnitTestRunner_init(J2ObjCUnitTestRunner *self);

FOUNDATION_EXPORT J2ObjCUnitTestRunner *new_J2ObjCUnitTestRunner_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT J2ObjCUnitTestRunner *create_J2ObjCUnitTestRunner_init(void);

FOUNDATION_EXPORT void J2ObjCUnitTestRunner_cleanResults(void);

FOUNDATION_EXPORT NSString *J2ObjCUnitTestRunner_printTestsResultWithJ2ObjCUnitOutputDir_(id<J2ObjCUnitOutputDir> outArg);

FOUNDATION_EXPORT void J2ObjCUnitTestRunner_runWithIOSClass_withId_(IOSClass *clazz, id context);

J2OBJC_TYPE_LITERAL_HEADER(J2ObjCUnitTestRunner)

@compatibility_alias BrComMobilemindJ2objcUnitTestRunner J2ObjCUnitTestRunner;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TestRunner_H
